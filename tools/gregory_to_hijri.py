import datetime as dt
import pandas as pd


def greg_to_hij_date(greg_date):
    # these lists are calculatet based on diffrence with 1970/01/01
    year_list = list(range(1348, 1700))

    from_list = [0, 79, 444, 810, 1175, 1540, 1905, 2271, 2636, 3001, 3366, 3732, 4097, 4462, 4827, 5193, 5558,
    5923, 6288, 6654, 7019, 7384, 7749, 8115, 8480, 8845, 9210, 9575, 9941, 10306, 10671, 11036, 11402, 11767,
    12132, 12497, 12863, 13228, 13593, 13958, 14324, 14689, 15054, 15419, 15785, 16150, 16515, 16880, 17246,
    17611, 17976, 18341, 18707, 19072, 19437, 19802, 20168, 20533, 20898, 21263, 21628, 21994, 22359, 22724,
    23089, 23455, 23820, 24185, 24550, 24916, 25281, 25646, 26011, 26377, 26742, 27107, 27472, 27838, 28203,
    28568, 28933, 29299, 29664, 30029, 30394, 30760, 31125, 31490, 31855, 32221, 32586, 32951, 33316, 33681,
    34047, 34412, 34777, 35142, 35508, 35873, 36238, 36603, 36969, 37334, 37699, 38064, 38430, 38795, 39160,
    39525, 39891, 40256, 40621, 40986, 41352, 41717, 42082, 42447, 42813, 43178, 43543, 43908, 44274, 44639,
    45004, 45369, 45734, 46100, 46465, 46830, 47195, 47561, 47926, 48291, 48656, 49022, 49387, 49752, 50117,
    50483, 50848, 51213, 51578, 51944, 52309, 52674, 53039, 53405, 53770, 54135, 54500, 54866, 55231, 55596,
    55961, 56327, 56692, 57057, 57422, 57787, 58153, 58518, 58883, 59248, 59614, 59979, 60344, 60709, 61075,
    61440, 61805, 62170, 62536, 62901, 63266, 63631, 63997, 64362, 64727, 65092, 65458, 65823, 66188, 66553,
    66919, 67284, 67649, 68014, 68380, 68745, 69110, 69475, 69840, 70206, 70571, 70936, 71301, 71667, 72032,
    72397, 72762, 73128, 73493, 73858, 74223, 74589, 74954, 75319, 75684, 76050, 76415, 76780, 77145, 77511,
    77876, 78241, 78606, 78972, 79337, 79702, 80067, 80433, 80798, 81163, 81528, 81893, 82259, 82624, 82989,
    83354, 83720, 84085, 84450, 84815, 85181, 85546, 85911, 86276, 86642, 87007, 87372, 87737, 88103, 88468,
    88833, 89198, 89564, 89929, 90294, 90659, 91025, 91390, 91755, 92120, 92486, 92851, 93216, 93581, 93946,
    94312, 94677, 95042, 95407, 95773, 96138, 96503, 96868, 97234, 97599, 97964, 98329, 98695, 99060, 99425,
    99790, 100156, 100521, 100886, 101251, 101617, 101982, 102347, 102712, 103078, 103443, 103808, 104173,
    104538, 104904, 105269, 105634, 105999, 106365, 106730, 107095, 107460, 107826, 108191, 108556, 108921,
    109287, 109652, 110017, 110382, 110748, 111113, 111478, 111843, 112209, 112574, 112939, 113304, 113670,
    114035, 114400, 114765, 115131, 115496, 115861, 116226, 116591, 116957, 117322, 117687, 118052, 118418,
    118783, 119148, 119513, 119879, 120244, 120609, 120974, 121340, 121705, 122070, 122435, 122801, 123166,
    123531, 123896, 124262, 124627, 124992, 125357, 125723, 126088, 126453, 126818, 127184, 127549, 127914]

    to_list = [78, 443, 809, 1174, 1539, 1904, 2270, 2635, 3000, 3365, 3731, 4096, 4461, 4826, 5192, 5557,
    5922, 6287, 6653, 7018, 7383, 7748, 8114, 8479, 8844, 9209, 9574, 9940, 10305, 10670, 11035, 11401,
    11766, 12131, 12496, 12862, 13227, 13592, 13957, 14323, 14688, 15053, 15418, 15784, 16149, 16514,
    16879, 17245, 17610, 17975, 18340, 18706, 19071, 19436, 19801, 20167, 20532, 20897, 21262, 21627,
    21993, 22358, 22723, 23088, 23454, 23819, 24184, 24549, 24915, 25280, 25645, 26010, 26376, 26741,
    27106, 27471, 27837, 28202, 28567, 28932, 29298, 29663, 30028, 30393, 30759, 31124, 31489, 31854,
    32220, 32585, 32950, 33315, 33680, 34046, 34411, 34776, 35141, 35507, 35872, 36237, 36602, 36968,
    37333, 37698, 38063, 38429, 38794, 39159, 39524, 39890, 40255, 40620, 40985, 41351, 41716, 42081,
    42446, 42812, 43177, 43542, 43907, 44273, 44638, 45003, 45368, 45733, 46099, 46464, 46829, 47194,
    47560, 47925, 48290, 48655, 49021, 49386, 49751, 50116, 50482, 50847, 51212, 51577, 51943, 52308,
    52673, 53038, 53404, 53769, 54134, 54499, 54865, 55230, 55595, 55960, 56326, 56691, 57056, 57421,
    57786, 58152, 58517, 58882, 59247, 59613, 59978, 60343, 60708, 61074, 61439, 61804, 62169, 62535,
    62900, 63265, 63630, 63996, 64361, 64726, 65091, 65457, 65822, 66187, 66552, 66918, 67283, 67648,
    68013, 68379, 68744, 69109, 69474, 69839, 70205, 70570, 70935, 71300, 71666, 72031, 72396, 72761,
    73127, 73492, 73857, 74222, 74588, 74953, 75318, 75683, 76049, 76414, 76779, 77144, 77510, 77875,
    78240, 78605, 78971, 79336, 79701, 80066, 80432, 80797, 81162, 81527, 81892, 82258, 82623, 82988,
    83353, 83719, 84084, 84449, 84814, 85180, 85545, 85910, 86275, 86641, 87006, 87371, 87736, 88102,
    88467, 88832, 89197, 89563, 89928, 90293, 90658, 91024, 91389, 91754, 92119, 92485, 92850, 93215,
    93580, 93945, 94311, 94676, 95041, 95406, 95772, 96137, 96502, 96867, 97233, 97598, 97963, 98328,
    98694, 99059, 99424, 99789, 100155, 100520, 100885, 101250, 101616, 101981, 102346, 102711, 103077,
    103442, 103807, 104172, 104537, 104903, 105268, 105633, 105998, 106364, 106729, 107094, 107459,
    107825, 108190, 108555, 108920, 109286, 109651, 110016, 110381, 110747, 111112, 111477, 111842,
    112208, 112573, 112938, 113303, 113669, 114034, 114399, 114764, 115130, 115495, 115860, 116225,
    116590, 116956, 117321, 117686, 118051, 118417, 118782, 119147, 119512, 119878, 120243, 120608,
    120973, 121339, 121704, 122069, 122434, 122800, 123165, 123530, 123895, 124261, 124626, 124991,
    125356, 125722, 126087, 126452, 126817, 127183, 127548, 127913, 128278]

    year_df = pd.DataFrame({'year': year_list, 'from': from_list, 'to': to_list})
    year_df.set_index('year', inplace=True)
    # days passed from 1970/01/01
    ser = (greg_date - dt.date(1970,1,1)).days
    # finding hij year using mask on years dataframe
    year = year_df[(year_df['from'] <= ser) & (year_df['to'] >= ser)].index[0]
    # finding days in current year first day of year is 0 and the last is 365 or 365 (leap year)
    days_in_year = ser - year_df.loc[year, 'from']
    #data frame for month
    month_df = pd.DataFrame({'month': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                             'from': [0, 31, 62, 93, 124, 155, 186, 216, 246, 276, 306, 336],
                             'to': [30, 61, 92, 123, 154, 185, 215, 245, 275, 305, 335, 365]})
    month_df.set_index('month', inplace=True)
    #finding month from days_in_year
    month = month_df[(month_df['from'] <= days_in_year) & (month_df['to'] >= days_in_year)].index[0]
    # finding days in current month first day of month is 0 and the last is 29 (30 days months) or
    # 30 (31 days months)
    days_in_month = days_in_year - month_df.loc[month, 'from']
    #finding day 0 is equal to first day of month
    day = days_in_month + 1
    return [year, month, day, ser]


def hij_strf_date(hij_date, strf):
    # takes a list of format [year, month, day, ser] and a string format and returns a formats date as that format
    # number of day in week
    year = hij_date[0]
    month = hij_date[1]
    day = hij_date[2]
    ser = hij_date[3]
    # %w Weekday as a decimal number.
    # added five is related to choosen first day (1970/01/01)
    pw = (ser + 5) % 7
    # %A Full weekday name.
    # real orders of list of opposite of what seems
    week_days_names = ['شنبه', 'یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه']
    pA = week_days_names[pw]
    # %-d Day of the month as a decimal number.
    p_d = day
    # %d Day of the month as a zero-padded decimal.
    pd = f'{day:0>2}'
    # month
    # real orders of list of opposite of what seems
    month_names = ['', 'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند']
    # %B Full month name.
    pB = month_names[month]
    # %-m Month as a decimal number.
    p_m = month
    # %m Month as a zero-padded decimal number.
    pm = f'{month:0>2}'
    # %-y Year without century as a decimal number.
    p_y = int(year - 100 * int(year/100))
    # %y Year without century as a zero-padded decimal number.
    py = f'{p_y:0>2}'
    # %Y Year with century as a decimal number.
    pY = year
    transform_dict = {'%w': pw, '%A': pA, '%-d': p_d, '%d': pd, '%B': pB, '%-m': p_m, '%m': pm, '%-y': p_y, '%y': py, '%Y': pY}
    # replacint in format string
    res = strf
    for key in transform_dict:
        res = res.replace(key, str(transform_dict[key]))
    return res



# d = dt.date(2021, 3, 20)
# x = dt.date.today()
# print(hij_strf_date(greg_to_hij_date(d), '%-y/%-m/%-d'))
# print(hij_strf_date(greg_to_hij_date(x), '%Y/%B/%-d'))